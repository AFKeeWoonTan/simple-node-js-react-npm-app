name: SonarQube Analysis

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  sonarqube:
    name: Analyze with SonarQube
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Start SonarQube Server
        run: |
          docker run -d --name sonarqube \
            -p 9000:9000 \
            --memory=3g --cpus=2 \
            -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true \
            -e SONAR_WEB_SYSTEMPASSCODE="admin123" \
            sonarqube:lts
          sleep 20
          docker logs sonarqube

      - name: Check Running Containers
        run: docker ps -a

      - name: Extract SonarQube Admin Token
        run: |
          echo "Fetching SonarQube Admin Token..."
          TOKEN=$(docker logs sonarqube 2>&1 | grep -A1 "generated a default admin token" | tail -n1 | awk '{print $NF}')
          echo "SONARQUBE_TOKEN=$TOKEN" >> $GITHUB_ENV
          echo "SonarQube token extracted."

      - name: Use Extracted Token
        run: |
          echo "Using SonarQube Token: $SONARQUBE_TOKEN"

      - name: Start SonarQube Scanner
        run: |
          docker run --rm --network host \
            -v $PWD:/usr/src \
            sonarsource/sonar-scanner-cli \
            -Dsonar.projectKey=my-javascript-project \
            -Dsonar.sources=/usr/src \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login="$SONARQUBE_TOKEN"

      - name: Stop SonarQube Server
        if: always()
        run: |
          if [ "$(docker ps -q -f name=sonarqube)" ]; then
            docker stop sonarqube
          fi